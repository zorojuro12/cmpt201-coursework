#define _POSIX_C_SOURCE 200809L
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <unistd.h>

int main(int argc, char *argv[]) {
  if (argc < 2) {
    fprintf(stderr, "usage: %s <program> [args...]\n", argv[0]);
    return 1;
  }

  pid_t pid = fork();
  if (pid < 0) {
    perror("fork");
    return 1;
  } else if (pid == 0) {
    execvp(argv[1], &argv[1]);
    perror("execvp");
    return 1;
  }

  int status = 0;
  pid_t w = waitpid(pid, &status, 0);
  if (w < 0) {
    perror("waitpid");
    return 1;
  }

  if (WIFEXITED(status)) {
    printf( " child exited with status %d\n, WEXITSTATUS(status))
  return 0; 
  } else if (WIFSIGNALED(status)) {
    printf("child program terminated by signal %d\n", WTERMSIG(status));
  } else {
    printf("child ended (neither nomal exit nor signla)\n");
  }
  return 0;
}
